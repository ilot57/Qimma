---
description: Authentication & Authorization rules
globs: 
alwaysApply: false
---
###Middleware Pattern

// middleware.ts
import { authMiddleware } from "@clerk/nextjs"

export default authMiddleware({
  publicRoutes: ["/", "/pricing", "/about"],
  afterAuth(auth, req) {
    // Custom logic after auth
  }
})

###Route Protection

// app/api/exams/route.ts
import { auth } from "@clerk/nextjs"

export async function GET() {
  const { userId } = auth()
  if (!userId) {
    return new Response("Unauthorized", { status: 401 })
  }
  
  // Proceed with authenticated request
}



